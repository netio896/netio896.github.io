<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Proxmox上配置Ubuntu和Debian LXC容器</title>
      <link href="/2025/01/13/Proxmox%E4%B8%8A%E9%85%8D%E7%BD%AEUbuntu%E5%92%8CDebian-LXC%E5%AE%B9%E5%99%A8/"/>
      <url>/2025/01/13/Proxmox%E4%B8%8A%E9%85%8D%E7%BD%AEUbuntu%E5%92%8CDebian-LXC%E5%AE%B9%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>在 Proxmox 上配置 Ubuntu 和 Debian LXC 容器</p><ol><li>基础系统工具<br>安装常用的系统管理工具：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt update &amp;&amp; apt upgrade -y</span><br><span class="line">apt install -y wget curl vim nano sudo locales bash-completion software-properties-common net-tools iputils-ping htop</span><br></pre></td></tr></table></figure><p>工具说明：</p><ul><li>wget 和 curl：下载文件和与 API 交互。</li><li>vim 和 nano：文本编辑器。</li><li>sudo：配置权限管理（LXC 容器需要手动设置）。</li><li>locales：设置语言环境（如 en_US.UTF-8）。</li><li>bash-completion：提供命令行自动补全功能。</li><li>net-tools 和 iputils-ping：调试网络。</li><li>htop：系统资源监控工具。</li></ul><hr><ol start="2"><li>配置语言环境<br>安装并生成语言环境：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt install -y locales</span><br><span class="line">locale-gen en_US.UTF-8</span><br><span class="line">update-locale LANG=en_US.UTF-8</span><br></pre></td></tr></table></figure><p>重启容器以生效：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br><span class="line">pct restart &lt;LXC_ID&gt;</span><br></pre></td></tr></table></figure><hr><ol start="3"><li>网络工具<br>安装网络调试和管理工具：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y traceroute dnsutils ifupdown iproute2</span><br></pre></td></tr></table></figure><p>工具说明：</p><ul><li>traceroute：跟踪网络路径。</li><li>dnsutils：包含 nslookup 等工具，用于 DNS 调试。</li><li>ifupdown：传统网络管理工具（如需手动配置 &#x2F;etc&#x2F;network&#x2F;interfaces）。</li></ul><hr><ol start="4"><li>开发工具<br>安装基本的开发工具：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y git build-essential python3 python3-pip</span><br></pre></td></tr></table></figure><p>工具说明：</p><ul><li>git：代码版本控制工具。</li><li>build-essential：包含 GCC 和 Make 等编译工具链。</li><li>python3 和 python3-pip：Python 开发和包管理工具。</li></ul><hr><ol start="5"><li>远程访问工具<br>安装并启动 SSH 服务：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt install -y openssh-server</span><br><span class="line">systemctl enable ssh</span><br><span class="line">systemctl start ssh</span><br></pre></td></tr></table></figure><hr><ol start="6"><li>Docker 支持（可选）</li></ol><h3 id="6-1-安装-Docker"><a href="#6-1-安装-Docker" class="headerlink" title="6.1 安装 Docker"></a>6.1 安装 Docker</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt install -y docker.io</span><br><span class="line">systemctl enable docker</span><br><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure><h3 id="6-2-配置-LXC-容器支持-Docker"><a href="#6-2-配置-LXC-容器支持-Docker" class="headerlink" title="6.2 配置 LXC 容器支持 Docker"></a>6.2 配置 LXC 容器支持 Docker</h3><p>确保 LXC 容器为特权模式，修改容器配置文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/pve/lxc/&lt;LXC_ID&gt;.conf</span><br></pre></td></tr></table></figure><p>添加以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">lxc.apparmor.profile: unconfined</span><br><span class="line">lxc.cap.drop:</span><br><span class="line">lxc.cgroup.devices.allow: a</span><br><span class="line">lxc.mount.auto: cgroup:rw</span><br><span class="line">lxc.mount.auto: proc:rw</span><br></pre></td></tr></table></figure><hr><ol start="7"><li>数据库支持（可选）<br>根据需求安装数据库：</li></ol><ul><li>MySQL&#x2F;MariaDB：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y mariadb-server</span><br></pre></td></tr></table></figure></li><li>PostgreSQL：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y postgresql postgresql-contrib</span><br></pre></td></tr></table></figure></li><li>SQLite（轻量级）：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y sqlite3</span><br></pre></td></tr></table></figure></li></ul><hr><ol start="8"><li>轻量级 Web 服务（可选）<br>安装轻量级 Web 服务：</li></ol><ul><li>Nginx：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y nginx</span><br></pre></td></tr></table></figure></li><li>Apache2：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y apache2</span><br></pre></td></tr></table></figure></li></ul><hr><ol start="9"><li>文件管理工具<br>安装文件共享和传输工具：</li></ol><ul><li>Rsync（高效文件同步）：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y rsync</span><br></pre></td></tr></table></figure></li><li>Samba（文件共享服务）：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y samba</span><br></pre></td></tr></table></figure></li></ul><hr><ol start="10"><li>调试工具（可选）<br>如果容器用于调试或测试环境，可以安装以下工具：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y strace tcpdump lsof iperf3</span><br></pre></td></tr></table></figure><p>工具说明：</p><ul><li>strace：跟踪系统调用。</li><li>tcpdump：分析网络流量。</li><li>lsof：查看打开的文件。</li><li>iperf3：测试网络带宽。</li></ul><hr><ol start="11"><li>清理无用文件<br>完成安装后，清理系统缓存以释放空间：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt autoremove -y</span><br><span class="line">apt clean</span><br></pre></td></tr></table></figure><hr><p>推荐工具总结</p><p>基础工具：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y wget curl vim nano sudo locales bash-completion</span><br></pre></td></tr></table></figure><p>开发环境：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y git build-essential python3 python3-pip</span><br></pre></td></tr></table></figure><p>网络调试：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y net-tools iputils-ping traceroute dnsutils ifupdown</span><br></pre></td></tr></table></figure><p>远程访问：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y openssh-server</span><br></pre></td></tr></table></figure><p>Docker 支持：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y docker.io</span><br></pre></td></tr></table></figure><hr><p>优化建议</p><ul><li>资源监控：使用 htop 或 iotop 监控容器的资源使用情况。</li><li>日志管理：安装并配置日志管理工具：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y rsyslog logrotate</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2025/01/07/Docker%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%93%E5%B1%9E%E8%AE%A2%E9%98%85%E9%93%BE%E6%8E%A5%E8%BD%AC%E6%8D%A2%E6%9C%8D%E5%8A%A1/"/>
      <url>/2025/01/07/Docker%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%93%E5%B1%9E%E8%AE%A2%E9%98%85%E9%93%BE%E6%8E%A5%E8%BD%AC%E6%8D%A2%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<hr><p>title: Docker搭建自己的专属订阅链接转换服务<br>date: 2025-01-07 10:00:00<br>updated: 2025-01-07 10:00:00<br>tags: </p><ul><li>Docker<ul><li>订阅链接<ul><li><p>教程<br>categories: </p><ul><li>技术<br>keywords: Docker, 订阅链接, 教程<br>description: 本文介绍如何使用 Docker 搭建专属订阅链接转换服务，包括环境部署、配置文件创建、服务启动和更新等。<br>cover: <a href="https://img.090227.xyz/file/ae62475a131f3734a201c.png">https://img.090227.xyz/file/ae62475a131f3734a201c.png</a><br>toc: true<br>copyright: true<br>copyright_author: CareyWang<br>copyright_author_href: <a href="https://github.com/CareyWang/sub-web">https://github.com/CareyWang/sub-web</a><br>background: “#ffffff”</li></ul><hr><h1 id="Docker搭建自己的专属订阅链接转换服务"><a href="#Docker搭建自己的专属订阅链接转换服务" class="headerlink" title="Docker搭建自己的专属订阅链接转换服务"></a>Docker搭建自己的专属订阅链接转换服务</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天用 Docker 来搭建属于自己的订阅链接转换服务。</p><p>本项目的 GitHub 地址：<a href="https://github.com/CareyWang/sub-web">CareyWang&#x2F;sub-web</a></p><p>Demo: <a href="https://sub.ywsj.eu.org/">https://sub.ywsj.eu.org</a></p><hr><h2 id="一、Docker-环境部署"><a href="#一、Docker-环境部署" class="headerlink" title="一、Docker 环境部署"></a>一、Docker 环境部署</h2><p>在 VPS 上安装 Docker 和 Docker Compose。</p><p>参考文档：</p><ul><li><a href="https://duan.yyzq.eu.org/docker-001">Docker 官方安装文档（英文）</a></li><li><a href="https://duan.yyzq.eu.org/docker-002">Docker Compose 官方安装文档（英文）</a></li><li><a href="https://duan.yyzq.eu.org/03">CentOS 安装 Docker 和 Docker Compose（中文）</a></li><li><a href="https://duan.yyzq.eu.org/04">Ubuntu 安装 Docker 和 Docker Compose（中文）</a></li></ul><hr><h2 id="二、创建-docker-compose-yml-文件"><a href="#二、创建-docker-compose-yml-文件" class="headerlink" title="二、创建 docker-compose.yml 文件"></a>二、创建 <code>docker-compose.yml</code> 文件</h2><ol><li>创建一个目录并进入此目录：<pre><code class="language-bash">   mkdir ~/sub-web &amp;&amp; cd ~/sub-weby</code></pre></li></ol></li></ul></li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用 Docker 搭建图床 Lsky Pro</title>
      <link href="/2025/01/07/LskyPro%E5%9B%BE%E5%BA%8A/"/>
      <url>/2025/01/07/LskyPro%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><h3 id="1-1-什么是-Lsky-Pro？"><a href="#1-1-什么是-Lsky-Pro？" class="headerlink" title="1.1 什么是 Lsky Pro？"></a>1.1 什么是 Lsky Pro？</h3><p>Lsky Pro（中文名：兰空图床）是一款功能强大的在线图片上传和管理工具，可作为云上相册或写作贴图库。</p><ul><li><strong>开发历程</strong>：始于 2017 年，由 ThinkPHP 5 开发；2022 年发布重写的 2.0 版本。</li><li><strong>特点</strong>：<ul><li>支持多种云存储：AWS S3、阿里云 OSS、腾讯云 COS 等。</li><li>支持多数据库：MySQL、PostgreSQL、SQLite、SQL Server。</li><li>强大的图片管理功能：支持水印、重命名、拖拽上传等。</li><li>角色组配置：支持不同角色的存储策略和上传频率限制。</li><li>支持通过接口上传图片和管理相册。</li></ul></li></ul><hr><h2 id="2-项目地址与资源"><a href="#2-项目地址与资源" class="headerlink" title="2. 项目地址与资源"></a>2. 项目地址与资源</h2><ul><li><strong>GitHub 原项目地址</strong>：<a href="https://github.com/lsky-org/lsky-pro">Lsky Pro</a></li><li><strong>官网地址</strong>：<a href="https://www.lsky.pro/">https://www.lsky.pro/</a></li><li><strong>文档地址</strong>：<a href="https://docs.lsky.pro/">https://docs.lsky.pro/</a></li><li><strong>Docker 镜像地址</strong>：<a href="https://hub.docker.com/r/dko0/lsky-pro">dko0&#x2F;lsky-pro</a></li><li><strong>PicGo 插件</strong>：<a href="https://hellodk.cn/post/964">lankong</a></li></ul><hr><h2 id="3-搭建环境"><a href="#3-搭建环境" class="headerlink" title="3. 搭建环境"></a>3. 搭建环境</h2><h3 id="3-1-必备条件"><a href="#3-1-必备条件" class="headerlink" title="3.1 必备条件"></a>3.1 必备条件</h3><ol><li><strong>服务器</strong>：推荐使用非大陆服务器，如腾讯香港轻量应用服务器、Vultr、Hetzner 等。</li><li><strong>系统</strong>：Debian 10（其他版本也可）。</li><li><strong>域名</strong>：并已解析到服务器。</li><li><strong>安装 Docker 和 Docker Compose</strong>：<ul><li>Docker 安装脚本：<a href="https://docs.docker.com/engine/install/">点击查看</a></li><li>Docker Compose 安装脚本：<a href="https://docs.docker.com/compose/install/">点击查看</a></li></ul></li></ol><h3 id="3-2-可选工具"><a href="#3-2-可选工具" class="headerlink" title="3.2 可选工具"></a>3.2 可选工具</h3><ul><li><strong>宝塔面板</strong>（海外版）或 <strong>Nginx Proxy Manager</strong>，用于配置反向代理和端口转发。</li></ul><hr><h2 id="4-使用-Docker-搭建-Lsky-Pro"><a href="#4-使用-Docker-搭建-Lsky-Pro" class="headerlink" title="4. 使用 Docker 搭建 Lsky Pro"></a>4. 使用 Docker 搭建 Lsky Pro</h2><h3 id="4-1-环境初始化"><a href="#4-1-环境初始化" class="headerlink" title="4.1 环境初始化"></a>4.1 环境初始化</h3><ol><li><strong>设置 SWAP（可选）</strong>：<pre><code class="language-bash">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; chmod +x box.sh &amp;&amp; ./box.sh</code></pre></li></ol><p>选择 18，输入 SWAP 的大小。</p><ol start="2"><li>安装常用软件：</li></ol><p>sudo -i          # 切换到 root 用户<br>apt update -y    # 更新系统<br>apt install wget curl sudo vim git -y</p><hr><p>4.2 创建工作目录</p><p>mkdir -p &#x2F;root&#x2F;data&#x2F;docker_data&#x2F;lsky-pro<br>cd &#x2F;root&#x2F;data&#x2F;docker_data&#x2F;lsky-pro<br>nano docker-compose.yml</p><p>在 docker-compose.yml 中填入以下内容：</p><p>version: ‘3’<br>services:<br>    lsky-pro:<br>        container_name: lsky-pro<br>        image: dko0&#x2F;lsky-pro<br>        restart: always<br>        volumes:<br>            - &#x2F;root&#x2F;data&#x2F;docker_data&#x2F;lsky-pro&#x2F;lsky-pro-data:&#x2F;var&#x2F;www&#x2F;html<br>        ports:<br>            - 7791:80<br>        environment:<br>            - MYSQL_HOST&#x3D;mysql<br>            - MYSQL_DATABASE&#x3D;lsky-pro<br>            - MYSQL_USER&#x3D;lsky-pro<br>            - MYSQL_PASSWORD&#x3D;lsky-pro</p><pre><code>mysql:    image: mysql:8.0    container_name: lsky-pro-db    restart: always    environment:        - MYSQL_DATABASE=lsky-pro        - MYSQL_USER=lsky-pro        - MYSQL_PASSWORD=lsky-pro        - MYSQL_ROOT_PASSWORD=lsky-pro    volumes:        - /root/data/docker_data/lsky-pro/db:/var/lib/mysql</code></pre><p>保存并退出（Ctrl+X -&gt; Y -&gt; Enter）。</p><hr><p>4.3 检查端口并启动容器</p><ol><li>检查端口是否被占用：</li></ol><p>lsof -i:7791</p><p>如果出现 -bash: lsof: command not found，执行以下命令安装：</p><p>apt install lsof -y</p><ol start="2"><li>启动容器：</li></ol><p>docker-compose up -d</p><ol start="3"><li>访问图床：</li></ol><p>http:&#x2F;&#x2F;&lt;服务器IP&gt;:7791</p><p>如需查看服务器 IP，可运行以下命令：</p><p>curl ip.sb</p><hr><ol start="5"><li>更新与卸载</li></ol><p>5.1 更新</p><ol><li>备份数据：</li></ol><p>cp -r &#x2F;root&#x2F;data&#x2F;docker_data&#x2F;lsky-pro&#x2F;lsky-pro-data &#x2F;root&#x2F;data&#x2F;docker_data&#x2F;lsky-pro&#x2F;lsky-pro-data.archive<br>cp -r &#x2F;root&#x2F;data&#x2F;docker_data&#x2F;lsky-pro&#x2F;db &#x2F;root&#x2F;data&#x2F;docker_data&#x2F;lsky-pro&#x2F;db.archive</p><ol start="2"><li>更新镜像：</li></ol><p>cd &#x2F;root&#x2F;data&#x2F;docker_data&#x2F;lsky-pro<br>docker-compose pull<br>docker-compose up -d</p><hr><p>5.2 卸载</p><ol><li>停止容器：</li></ol><p>cd &#x2F;root&#x2F;data&#x2F;docker_data&#x2F;lsky-pro<br>docker-compose down</p><ol start="2"><li>删除数据：</li></ol><p>rm -rf &#x2F;root&#x2F;data&#x2F;docker_data&#x2F;lsky-pro</p><hr><ol start="6"><li>配置反向代理</li></ol><p>如果使用 Nginx Proxy Manager 或 宝塔面板，可以配置反向代理将 7791 端口隐藏到域名下，具体步骤如下：</p><ol><li><p>添加域名解析到服务器 IP。</p></li><li><p>在面板中创建反向代理，指向 <a href="http://127.0.0.1:7791。">http://127.0.0.1:7791。</a></p></li><li><p>配置 HTTPS 证书，保护数据安全。</p></li></ol><hr><p>至此，Lsky Pro 图床的安装和配置已经完成！如果遇到问题，欢迎在评论区交流！</p><p>这个版本的文档简洁明了，包含完整的步骤和详细说明，适合分享给需要搭建图床的用户。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Lsky Pro </tag>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【PVE LXC OpenWrt】最新 PVE8 LXC 安装 OpenWrt + OpenClash + Tun 旁路由</title>
      <link href="/2025/01/07/OpenWRT-PVE-LXC-CT%E5%AE%B9%E5%99%A8%E4%B8%8B%E7%9A%84%E5%AE%89%E8%A3%85/"/>
      <url>/2025/01/07/OpenWRT-PVE-LXC-CT%E5%AE%B9%E5%99%A8%E4%B8%8B%E7%9A%84%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>OpenWrt 和 OpenClash 有许多魔改发行版本，既然选择 PVE 来构建 HomeLab 系统，我相信你有较强的折腾能力，<strong>建议所有镜像或包选择官方版本</strong>，因为：</p><ol><li>魔改发行版兼容性较差，很多版本安装后会出现问题，且不了解插件机制时很难解决。</li><li>官方版本虽可能也有问题，但通过 Issue 或 Google 更容易找到答案。</li></ol><p>本文除了手把手安装，还解决以下问题：</p><ol><li>LXC 容器中 OpenWrt 无法联网。</li><li>Tun 模式的启用问题。</li></ol><hr><h2 id="版本信息"><a href="#版本信息" class="headerlink" title="版本信息"></a>版本信息</h2><ul><li><strong>CPU</strong>: i7 9700k (x86_64)</li><li><strong>PVE</strong>: 8.2.2</li><li><strong>OpenWrt</strong>: 23.05.4 X86_64</li><li><strong>OpenClash</strong>: 0.46.050-beta_all</li></ul><hr><h2 id="网络架构图"><a href="#网络架构图" class="headerlink" title="网络架构图"></a>网络架构图</h2><blockquote><p>此处可插入网络架构图。</p></blockquote><hr><h2 id="1-安装-OpenWrt"><a href="#1-安装-OpenWrt" class="headerlink" title="1. 安装 OpenWrt"></a>1. 安装 OpenWrt</h2><h3 id="1-1-获取-OpenWrt-官方镜像"><a href="#1-1-获取-OpenWrt-官方镜像" class="headerlink" title="1.1 获取 OpenWrt 官方镜像"></a>1.1 获取 OpenWrt 官方镜像</h3><ol><li><p>前往官方发布路径，选择合适的处理器架构（如 <code>x86/64</code>），下载 <code>rootfs.tar.gz</code> 镜像压缩包：<br><a href="https://archive.openwrt.org/releases/23.05.4/targets/">OpenWrt 官方发布路径</a></p></li><li><p>使用以下命令将镜像包下载到 PVE 本地目录：</p><pre><code class="language-bash">cd /var/lib/vz/template/cachewget https://archive.openwrt.org/releases/23.05.4/targets/x86/64/openwrt-23.05.4-x86-64-rootfs.tar.gz</code></pre></li></ol><hr><p>1.2 创建 OpenWrt LXC 容器</p><p>在 PVE 节点上创建 LXC 容器，使用以下命令：</p><p>pct create 102 local:vztmpl&#x2F;openwrt-23.05.4-x86-64-rootfs.tar.gz –rootfs local-lvm:1 –ostype unmanaged –hostname OpenWrt –arch amd64 –cores 8 –memory 1024 –swap 0 –net0 bridge&#x3D;vmbr0,name&#x3D;eth0</p><hr><p>1.3 配置容器 Tun 模式</p><p>编辑容器配置文件，追加以下内容：</p><p>lxc.apparmor.profile: unconfined<br>lxc.cgroup.devices.allow: a<br>lxc.cap.drop:<br>lxc.cgroup2.devices.allow: c 10:200 rwm<br>lxc.mount.entry: &#x2F;dev&#x2F;net&#x2F;tun dev&#x2F;net&#x2F;tun none bind,create&#x3D;file</p><hr><p>1.4 启动容器</p><ol><li><p>在 PVE 界面中，左侧数据中心 -&gt; PVE -&gt; 选择容器。</p></li><li><p>点击 控制台 -&gt; 启动，按回车即可进入容器终端。</p></li></ol><hr><p>1.5 配置 IP 和 DNS</p><p>修改容器网络配置文件 &#x2F;etc&#x2F;config&#x2F;network：</p><p>config interface &#39;lan&#39;<br>        option device &#39;br-lan&#39;<br>        option proto &#39;static&#39;<br>        option ipaddr &#39;192.168.50.102&#39;<br>        option netmask &#39;255.255.255.0&#39;<br>        option gateway &#39;192.168.50.1&#39;<br>        list dns &#39;192.168.50.1&#39;</p><hr><p>1.6 设置访问密码</p><p>使用以下命令设置登录密码：</p><p>passwd</p><hr><p>1.7 检查网络连通性</p><p>访问 <a href="http://192.168.50.102/">http://192.168.50.102</a> 进入 OpenWrt Web 界面，测试网络连通性。</p><hr><ol start="2"><li>安装 OpenClash</li></ol><p>2.1 安装前置依赖</p><p>在容器控制台执行以下命令：</p><p>opkg update<br>opkg install coreutils-nohup bash dnsmasq-full curl ca-certificates ip-full libcap libcap-bin ruby ruby-yaml kmod-tun kmod-inet-diag unzip kmod-nft-tproxy luci-compat luci luci-base luci-i18n-base-zh-cn</p><p>如遇到 dnsmasq 冲突问题，使用以下命令卸载原包并重新安装：</p><p>opkg remove dnsmasq<br>opkg install dnsmasq-full</p><hr><p>2.2 下载 OpenClash 安装包</p><p>前往 OpenClash 官方发布地址，下载最新的 luci-app-openclash 安装包，并按照官方指南完成安装。</p><hr><p>至此，您已经完成了在 PVE LXC 环境下安装 OpenWrt 和 OpenClash 的全部步骤。如有问题，欢迎交流！ ‘ &gt; source&#x2F;_posts&#x2F;pve-lxc-openwrt-openclash-tun.md</p><h3 id="解释："><a href="#解释：" class="headerlink" title="解释："></a>解释：</h3><ol><li><strong><code>echo</code></strong>：将内容以字符串形式输出。</li><li><strong>重定向 (<code>&gt;</code>)</strong>：将内容写入到 <code>Hexo</code> 的 <code>_posts</code> 文件夹中，文件名为 <code>pve-lxc-openwrt-openclash-tun.md</code>。</li><li><strong>路径</strong>：<code>source/_posts/</code> 是 Hexo 默认的文章存放路径。</li></ol><h3 id="生成文章后："><a href="#生成文章后：" class="headerlink" title="生成文章后："></a>生成文章后：</h3><p>运行以下命令查看效果：</p><pre><code class="language-bash">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server然后访问 http://localhost:4000 查看生成的文章。</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PVE </tag>
            
            <tag> OpenWrt </tag>
            
            <tag> OpenClash </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 系统加载 WiFi 驱动的步骤</title>
      <link href="/2025/01/07/istoreos%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1%E9%A9%B1%E5%8A%A8/"/>
      <url>/2025/01/07/istoreos%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1%E9%A9%B1%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="在-Linux-系统中加载-WiFi-驱动的步骤"><a href="#在-Linux-系统中加载-WiFi-驱动的步骤" class="headerlink" title="在 Linux 系统中加载 WiFi 驱动的步骤"></a>在 Linux 系统中加载 WiFi 驱动的步骤</h2><p>以下是加载和安装 WiFi 驱动的完整流程：</p><hr><h3 id="1-使用命令查询需要的-WiFi-驱动"><a href="#1-使用命令查询需要的-WiFi-驱动" class="headerlink" title="1. 使用命令查询需要的 WiFi 驱动"></a>1. 使用命令查询需要的 WiFi 驱动</h3><p>通过 <code>dmesg</code> 日志查看系统当前的 WiFi 驱动需求：</p><pre><code class="language-bash">dmesg | grep -i wifi</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Linux </tag>
            
            <tag> WiFi 驱动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开源销售点系统 (OSPOS) 安装与功能介绍</title>
      <link href="/2025/01/07/%E5%BC%80%E6%BA%90%E9%94%80%E5%94%AE%E7%B3%BB%E7%BB%9Fopensourcepos/"/>
      <url>/2025/01/07/%E5%BC%80%E6%BA%90%E9%94%80%E5%94%AE%E7%B3%BB%E7%BB%9Fopensourcepos/</url>
      
        <content type="html"><![CDATA[<h1 id="开源销售点系统-OSPOS-安装与功能介绍"><a href="#开源销售点系统-OSPOS-安装与功能介绍" class="headerlink" title="开源销售点系统 (OSPOS) 安装与功能介绍"></a>开源销售点系统 (OSPOS) 安装与功能介绍</h1><p>开源销售点系统（Open Source Point of Sale，简称 OSPOS）是一个基于 Web 的销售点应用程序，由 PHP 的 CodeIgniter 框架编写，使用 MySQL 作为数据后端，并具有基于 Bootstrap 3 的用户界面。</p><hr><h2 id="功能特点"><a href="#功能特点" class="headerlink" title="功能特点"></a>功能特点</h2><p>OSPOS 提供了一系列强大的功能，满足不同业务需求：</p><ul><li><strong>库存管理</strong>：支持物品和套件，具有可扩展属性列表。</li><li><strong>税务支持</strong>：支持增值税、商品及服务税、多层税收。</li><li><strong>销售管理</strong>：<ul><li>销售登记册，包含交易记录。</li><li>报价和发票。</li><li>收款功能。</li><li>支持提现。</li></ul></li><li><strong>打印和电子邮件支持</strong>：<ul><li>打印和通过电子邮件发送收据、发票和报价单。</li><li>条码生成和打印。</li></ul></li><li><strong>数据库管理</strong>：客户和供应商数据库。</li><li><strong>多用户支持</strong>：具有权限控制。</li><li><strong>报告功能</strong>：提供销售、订单、费用、库存状态等报告。</li><li><strong>其他功能</strong>：<ul><li>礼品卡、奖励、餐厅餐桌管理。</li><li>短信通知。</li><li>多语言支持。</li><li>GDPR 就绪。</li><li>Mailchimp 集成。</li><li>Google reCAPTCHA 保护登录页面免受暴力攻击。</li></ul></li></ul><hr><h2 id="环境需求"><a href="#环境需求" class="headerlink" title="环境需求"></a>环境需求</h2><p>OSPOS 使用以下技术栈：</p><ul><li><strong>Web 框架</strong>：CodeIgniter。</li><li><strong>数据库</strong>：MySQL（推荐使用 MariaDB）。</li><li><strong>用户界面</strong>：基于 Bootstrap 3，可通过 Bootswatch 更改主题。</li></ul><hr><h2 id="Docker-安装"><a href="#Docker-安装" class="headerlink" title="Docker 安装"></a>Docker 安装</h2><p>使用 Docker 部署 OSPOS 的方法如下：</p><h3 id="1-Docker-Compose-文件"><a href="#1-Docker-Compose-文件" class="headerlink" title="1. Docker Compose 文件"></a>1. Docker Compose 文件</h3><p>创建一个名为 <code>docker-compose.yml</code> 的文件，并填入以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.4&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">app_net:</span></span><br><span class="line">  <span class="attr">db_net:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">sqlscript:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">jekkos/opensourcepos:sqlscript</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">/bin/sh</span> <span class="string">-c</span> <span class="string">&#x27;exit 0&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">ospos:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">jekkos/opensourcepos:3.3.8</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;18080:80&quot;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">app_net</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db_net</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/volume1/docker/opensourcepos:/app/public/uploads</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/volume1/docker/opensourcepos:/app/application/logs</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">CI_ENV=production</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">FORCE_HTTPS=false</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PHP_TIMEZONE=UTC</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_USERNAME=admin</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_PASSWORD=pointofsale</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_DB_NAME=ospos</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_HOST_NAME=mysql</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">mysql:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mariadb:10.5</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">expose:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3306&quot;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db_net</span></span><br><span class="line">    <span class="attr">volumes_from:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">sqlscript</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/volume1/docker/opensourcepos:/var/lib/mysql:rw</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_ROOT_PASSWORD=pointofsale</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_DATABASE=ospos</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_USER=admin</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_PASSWORD=pointofsale</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> OSPOS </tag>
            
            <tag> 销售点 </tag>
            
            <tag> CodeIgniter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建属于自己的发卡小店-独角数卡</title>
      <link href="/2025/01/07/%E6%90%AD%E5%BB%BA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8F%91%E5%8D%A1%E5%B0%8F%E5%BA%97-%E7%8B%AC%E8%A7%92%E6%95%B0%E5%8D%A1/"/>
      <url>/2025/01/07/%E6%90%AD%E5%BB%BA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8F%91%E5%8D%A1%E5%B0%8F%E5%BA%97-%E7%8B%AC%E8%A7%92%E6%95%B0%E5%8D%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="搭建属于自己的发卡小店-独角数卡"><a href="#搭建属于自己的发卡小店-独角数卡" class="headerlink" title="搭建属于自己的发卡小店-独角数卡"></a>搭建属于自己的发卡小店-独角数卡</h1><p>一、首先给出大佬的 Git官方仓库</p><p><a href="https://github.com/assimon/dujiaoka">https://github.com/assimon/dujiaoka</a><br>我选用的是docker版本的部署,至于为什么选择这个,当然是因为方便!<br>二、直接运行docker版本的独角卡命令<br>1.部署脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -dit --name dujiaoka -p 80:80 -p 9002:9000 -e WEB_DOCUMENT_ROOT=/app/public jiangjuhong/dujiaoka</span><br></pre></td></tr></table></figure><p>2.安装的时候需要MySQL和Redis,所以就直接安装他们</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 3306:3306  -e MYSQL_ROOT_PASSWORD=123456 --name mysql -v /data/mysql/config/my.cnf:/etc/mysql/my.cnf -v /data/mysql/db:/var/lib/mysql mysql:5.7</span><br><span class="line">docker run -d --name myredis -p 6379:6379 redis --requirepass <span class="string">&quot;12345&quot;</span></span><br></pre></td></tr></table></figure><p>没有报错的情况,就已经准备工作好了<br>3.直接访问部署服务的IP,就可以填写对应的MySQL和Redis的信息进行安装,如果数据库没有创建库,你可以通过数据库连接工具创建一个库<br>5.可以使用CF域名管理映射到对应vps的IP上面就可以通过域名进行访问<br>6.里面的邮箱配置可以参考如下图:<br>pic_40719099.png</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/01/07/hello-world/"/>
      <url>/2025/01/07/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
